buildscript {
    ext.kotlin_version = "1.6.20"
    ext.kotlin_reflect_version = "1.6.20"

    repositories {
        maven { url = "https://maven.minecraftforge.net" }
        maven { url = "https://plugins.gradle.org/m2/" }
        maven { url = "https://maven.parchmentmc.org" }
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.23", changing: true
        classpath group: "com.github.jengelman.gradle.plugins", name: "shadow", version: "6.1.0"
        classpath group: "org.jetbrains.kotlin", name: "kotlin-gradle-plugin", version: kotlin_version
        classpath group: "org.parchmentmc", name: "librarian", version: "1.+"
    }
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "kotlin"

group = "dev.psygamer"
archivesBaseName = "wireframe"
version = "0.1"

java {
    withSourcesJar()
    withJavadocJar()

    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: "parchment", version: "2022.03.06-1.16.5"

    runs {
        client {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"

            mods {
                wireframe {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"

            mods {
                wireframe {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run")

            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"

            args "--mod", "wireframe", "--all",
                    "--existing", file("src/main/resources/").toString(),
                    "--existing", file("src/generated/resources/").toString(),
                    "--output", file("src/generated/resources/")

            mods {
                wireframe {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir "src/generated/resources" }

configurations {
    shadow

    compile.extendsFrom shadow
}

repositories {
    mavenCentral()
    maven {
        name = 'KotlinForForge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        name = "FabricMC"
        url = "https://maven.fabricmc.net"
    }
}
dependencies {
    minecraft "net.minecraftforge:forge:1.16.5-36.2.0"

//    shadow "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    shadow "org.jetbrains.kotlin:kotlin-reflect:$kotlin_reflect_version"

    // Is probably going to become part of Wireframe
    implementation("thedarkcolour:kotlinforforge:1.16.0")
}

shadowJar {
    configurations = [project.configurations.shadow]

    classifier ""
    finalizedBy "reobfJar"

    manifest {
        attributes([
                "Specification-Title"     : "wireframe",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar {
    classifier "standalone"
    finalizedBy "reobfJar"

    manifest {
        attributes([
                "Specification-Title"     : "wireframe",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

reobf {
    shadowJar {}
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
